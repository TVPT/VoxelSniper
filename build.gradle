// Gradle dependencies
buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            url "http://repository.jboss.org/nexus/content/groups/public/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }

    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.10.0'
        classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
    }
}

// Plugins
apply plugin: 'forge'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'license'
apply plugin: 'checkstyle'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish-auth'
apply plugin: 'signing'
apply plugin: 'com.github.johnrengelman.shadow'

defaultTasks 'clean', 'licenseFormat', 'check', 'build'

group 'com.voxelplugineering'
archivesBaseName = 'VoxelSniper'
version '7.1.0-SNAPSHOT'

// Minimum version of Java required
sourceCompatibility = 1.6
targetCompatibility = 1.6

// Project dependencies
repositories {
	mavenLocal()
    mavenCentral()
    maven {
        url "http://vault.voxelmodpack.com/content/groups/public/"
    }
    maven {
        url "http://nexus.afterkraft.com/content/groups/public/"
    }
    maven {
        url "http://repo.budgiehouse.com:8081/nexus/content/repositories/VBpublic/"
    }
    maven {
        url "https://hub.spigotmc.org/nexus/content/groups/public/"
    }
    maven {
        url "http://repo.spongepowered.org/maven/"
    }
}

minecraft {
    version = "1.8-11.14.0.1252-1.8"
    runDir = "eclipse"
    mappings = "snapshot_nodoc_20141130"
}

dependencies {
    compile 'com.google.guava:guava:18.0'
    compile 'com.voxelplugineering:VoxelGunsmith:7.1.0-SNAPSHOT'
    compile 'org.bukkit:bukkit:1.8.8-R0.1-SNAPSHOT'
    compile 'net.milkbowl.vault:VaultAPI:1.4'
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.spongepowered:spongeapi:2.1-SNAPSHOT'
}

// Generates sources.jar
task sourceJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

ext {
    projectName = 'VoxelSniper'
    inceptionYear = '2014'
    packaging = 'jar'
    url = 'http://voxelplugineering.com/'
    description = "Implementation of VoxelSniper for Sponge, Forge, and Bukkit"
    organization = 'The VoxelBox dev team'
    pomFile = file("${project.projectDir}/pom.xml")
    buildNumber = project.hasProperty("buildNumber") ? buildNumber : '0'
    ciSystem = project.hasProperty("ciSystem") ? ciSystem : 'unknown'
    commit = project.hasProperty("commit") ? commit : 'unknown'
}

configurations {
    pom
}

artifacts {
    archives jar
    archives sourceJar
}

def sonatypeUser = hasProperty('sonatypeUser') ? sonatypeUser : System.getenv('sonatypeUser')
def sonatypePassword = hasProperty('sonatypePassword') ? sonatypePassword : System.getenv('sonatypePassword')
// Vault
uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment ->
            signing.signPom(deployment)
        }
        repository(id: 'tvpt-repo', url: "http://vault.voxelmodpack.com/content/repositories/releases") {
            authentication(userName: sonatypeUser, password: sonatypePassword)

        }
        snapshotRepository(id: 'tvpt-repo', url: "http://vault.voxelmodpack.com/content/repositories/snapshots") {
            authentication(userName: sonatypeUser, password: sonatypePassword)
        }
        pom {
            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName
            project {
                name project.archivesBaseName
                packaging 'jar'
                description 'Implementation of VoxelSniper for Sponge, Forge, and Bukkit'
                url 'http://voxelmodpack.com/'
                scm {
                    url 'https://github.com/tvpt/voxelsniper'
                    connection 'git'
                    developerConnection 'git@github.com:tvpt/VoxelSniper.git'
                }
                licenses {
                    license {
                        name 'The MIT License'
                        url 'http://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id 'gabizou'
                        name 'Gabriel Harris-Rouquette'
                        email 'gabizou@me.com'
                    }
                    developer {
                        id 'Deamon5550'
                        name 'Nick Conde'
                        email 'nick@budgiehouse.com'
                    }

                }
            }
        }
    }
}

signing {
    required {
        gradle.taskGraph.hasTask("uploadArchives")
    }
    sign configurations.archives
}

processResources {
    from 'LICENSE'
    
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

license {
    ext.name = project.name
    ext.organization = project.organization
    ext.url = project.url
    ext.year = project.inceptionYear
    exclude "**/*.info"
    exclude "assets/**"
    header file("LICENSE")
    sourceSets = project.sourceSets
    ignoreFailures false
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

checkstyle {
    configProperties = [
            "name"        : project.name,
            "organization": project.organization,
            "url"         : project.url,
            "year"        : project.inceptionYear
    ]
    configFile = file("checkstyle.xml")
}


jar {
    manifest {
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": version + "+" + ciSystem + "-b" + buildNumber + ".git-" + commit,
                "Built-By": System.properties['user.name'],
                "Created-By": System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
                "Implementation-Vendor": url,
				"Main-Class": "com.voxelplugineering.voxelsniper.PlatformMain"
        )
    }
    from ("${projectDir}") {
        include('LICENSE', 'README.md')
    }
}

configure([compileJava, compileTestJava]) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-path']
    options.deprecation = true
    options.encoding = 'utf8'
}

shadowJar {
    dependencies {
        include(dependency('com.google.guava:guava:18.0'))
        include(dependency('com.voxelplugineering:VoxelGunsmith:7.1.0-SNAPSHOT'))
        include(dependency('com.google.code.gson:gson:2.3'))
        include(dependency('org.ow2.asm:asm-all:5.0.3'))
        include(dependency('ninja.leaping.configurate:configurate-hocon:2.0'))
        include(dependency('ninja.leaping.configurate:configurate-core:2.0'))
        include(dependency('com.typesafe:config:1.2.1'))
    }
	
	relocate "com.google", "voxelsniper.reshade.com.google"
	relocate "org.objectweb", "voxelsniper.reshade.org.objectweb"
	relocate "ninja.leaping.configurate", "voxelsniper.reshade.ninja.leaping.configurate"
	relocate "com.typesafe", "voxelsniper.reshade.com.typesafe"
}

reobf {
	reobf(project.tasks.shadowJar) { spec ->
		spec.classpath = sourceSets.main.compileClasspath;
	}
}

build.dependsOn shadowJar
